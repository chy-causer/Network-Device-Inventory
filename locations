#!/usr/bin/perl -T
#
# Name: locations
# Creator: Guy Edwards
# Created: 2008-07-28
# Description: Location administration page for the inventory
#
# $Id: locations 3538 2012-02-10 15:39:37Z guy $
# $LastChangedBy: guy $
# $LastChangedDate: 2012-02-10 15:39:37 +0000 (Fri, 10 Feb 2012) $
# $LastChangedRevision: 3538 $
# $uid: riVtpR2lqYJKcJik9VHlUfBUZ4vz7IAWgSbKzeEm4WYk2 $
#

use warnings FATAL => 'all';
use strict;

use CGI;
use Config::Tiny;
use DBI;
use DBD::Pg;
use Template;

use Inventory qw(dbconnect populate_query_fields acl_checker);
use Inventory::Locations
  qw(create_locations edit_locations get_locations_info count_locations_perhost);

my $BASEURL = CGI::url( -base => 1 );
my $HOSTNAME = $BASEURL;

# remove everything from the first . onwards
$HOSTNAME =~ s/\..*$//gx;

# remove everything from the start to the last /
$HOSTNAME =~ s/^.*\///gx;

my $CONFIG      = Config::Tiny->new();
my $CONFIG_FILE = "/srv/www/$HOSTNAME/lib/inventory.ini";
$CONFIG = Config::Tiny->read("$CONFIG_FILE");

my $dbhost           = $CONFIG->{'database'}->{db_host};
my $dbname           = $CONFIG->{'database'}->{db_name};
my $dbuser           = $CONFIG->{'database'}->{db_user};
my $dbpass           = $CONFIG->{'database'}->{db_pass};
my $dbh              = dbconnect( $dbname, $dbuser, $dbhost, $dbpass );
my $valid_users      = $CONFIG->{'general'}->{allowed_users};
my $htmltemplatepath = $CONFIG->{'locations'}->{tt_dir};

#############################################################################
#                                     main                                  #
#############################################################################

my $q = CGI->new();
print $q->header();

# this just loads the default site settings
my $tt = Template->new( { INCLUDE_PATH => $htmltemplatepath, } );

# print the stock header (banner and title)
$tt->process(
    'inventory_header.tt',
    {
        pagetitle  => 'Locations',
        baseurl    => $BASEURL,
        extramenu  => 'inventory',
        javascript => 'on',
    }
);

# invalid users get no further than the next line
Inventory::acl_checker( $tt, $valid_users );

# I differenciate between get and post, not everyone agrees with this but
# there is an RFC2616 that suggests that we should. I do so for behaviour not
# security reasons.
my %gets = populate_query_fields();    # not strictly a get field of course
my %POSTS;
if ( $ENV{REQUEST_METHOD} eq 'POST' ) {
    %POSTS = $q->Vars;
}

my $edit;
if ( $gets{'location_id'} && $gets{'location_id'} !~ m/\D/x ) {
    $edit = $gets{'location_id'};
}

my %message;    # communicate success or failure, sink or swim

# are we editing an existing entry?
if ( $POSTS{'location_id'} ) {
    %message = %{ Inventory::Locations::edit_locations( $dbh, \%POSTS ) };
}
elsif ( $POSTS{'location_name'} ) {

    # are we creating a new entry?
    %message = %{ Inventory::Locations::create_locations( $dbh, \%POSTS ) };
}

# list all the locations (array of hashes)
my @locations = Inventory::Locations::get_locations_info($dbh);

# list all the locations (array of hashes)
my %location_counts = %{ Inventory::Locations::count_locations_perhost($dbh) };

$tt->process(
    'inventory_locations.tt',
    {
        locations       => \@locations,
        message         => \%message,
        edit            => $edit,
        location_counts => \%location_counts,
    }
);
$tt->process( 'stdfoot.tt', {} );

__END__

=head1 NAME

=head1 VERSION

This documentation refers to  version 

=head1 USAGE

=head1 REQUIRED ARGUMENTS

=head1 OPTIONS

=head1 DESCRIPTION

=head1 DIAGNOSTICS

error messages

=head1 CONFIGURATION AND ENVIRONMENT

Configuration files used?

=head1 DEPENDENCIES

=head1 INCOMPATIBILITIES

none known

=head1 BUGS AND LIMITATIONS

Report any found to <hostmaster@ox.ac.uk>

=head1 AUTHOR


, maintained by <hostmaster@ox.ac.uk>

=head1 LICENSE AND COPYRIGHT



(c) University of Oxford
