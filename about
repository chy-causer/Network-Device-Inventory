#!/usr/bin/perl -T
#
# Name: about
# Creator: Guy Edwards
# Created: 2012-02-07
# Description: Show the version numbers and checksums for website files
#
# $Id: about 3536 2012-02-10 13:19:20Z guy $
# $LastChangedBy: guy $
# $LastChangedDate: 2012-02-10 13:19:20 +0000 (Fri, 10 Feb 2012) $
# $LastChangedRevision: 3536 $
#

use warnings FATAL => 'all';
use strict;

use CGI;
use Config::Tiny;
use File::Slurp;
use Template;
use Inventory;

my $BASEURL = CGI::url( -base => 1 );
my $HOSTNAME = $BASEURL;

# remove everything from the first . onwards
$HOSTNAME =~ s/\..*$//gx;

# # # remove everything from the start to the last /
$HOSTNAME =~ s/^.*\///gx;

my $CONFIG      = Config::Tiny->new();
my $CONFIG_FILE = "/srv/www/$HOSTNAME/lib/inventory.ini";
$CONFIG = Config::Tiny->read("$CONFIG_FILE");

my $valid_users      = $CONFIG->{'general'}->{allowed_users};
my $htmltemplatepath = $CONFIG->{'locations'}->{tt_dir};

#############################################################################
#                                     main                                  #
#############################################################################

my $q = CGI->new();
print $q->header();

# this just loads the default site settings
my $tt = Template->new( { INCLUDE_PATH => $htmltemplatepath, } );

# print the stock header (banner and title)
$tt->process(
    'inventory_header.tt',
    {
        pagetitle  => 'Integrity',
        baseurl    => $BASEURL,
        extramenu  => 'inventory',
        javascript => 'on',
    }
);

# invalid users get no further than the next line
Inventory::acl_checker( $tt, $valid_users );

my %files;
my @dirs = (
             "/srv/www/$HOSTNAME/cgi-bin/inventory", 
             "/srv/www/$HOSTNAME/lib/tt", 
             '/usr/local/lib/site_perl/Inventory'
             );

foreach my $dirname (@dirs){
  opendir(DIR, $dirname) or die "cant opendir $dirname: $!";
    
    while( defined (my $filename = readdir DIR) ){
       my $ref = file_details($filename, $dirname);
       if (defined $ref){
           $files{$filename} = $ref;
       }
    }
}
$files{'Inventory.pm'} = file_details('Inventory.pm','/usr/local/lib/site_perl');

$tt->process( 'inventory_about.tt', {
                  files => \%files,
} );
$tt->process( 'stdfoot.tt');

sub file_details {
       my ($file,$directory) = @_;

       return if ! defined $file;
       if ( not defined $directory ){
           # called without required args
           return;
       };

       if ( $file =~ m/\.tt$/ && $file !~ m/^inventory_/){
           # tt file belonging to other project
           return;
       }
       if ( not -f "$directory/$file" or -l "$directory/$file" ){
           # not a file
           return;
       }
       
       my %details = (
           'name'            => "$directory/$file",
           'revision'        => 'svn header missing?',
           'lastchangeddate' => 'svn header missing?',
           'error'           => '1',
           'type'            => 'script',
       );

       if($file =~ m/\.tt$/){
           $details{'type'} = 'template';
       }
       elsif($file =~ m/\.pm$/){
           $details{'type'} = 'module';
       }

       my @lines = File::Slurp::read_file( "$directory/$file" ) ;
       foreach my $line (@lines){
           
           next if $line !~ m/^#/;

           if( $line =~ m/^#[\s]*\$Id:\s([^\s]+)\s([^\s]+)\s([^\s]+)\s/ ){
             
               # everything worked
               $details{'error'} = 0;

               if ($1 ne $file ){
                    # spoke too soon
                    $details{'name'} = "Error: SVN properties not correctly set on $file";
                    $details{'error'} = 1;
               }
               $details{'revision'}        = $2;
               $details{'lastchangeddate'} = $3;

              last;
          }
    }
    return \%details;
}

#           if ( $line =~ m/^#\$Id:
#                           \s([\w]+)
#                           \s([\d]+)
#                           \s([\d\-\:\s])+Z
 #                          \s([\w]+)
 #                          \s\$$/x ){
__END__

=head1 NAME
integrity

=head1 VERSION

This documentation refers to  version 

=head1 USAGE

=head1 REQUIRED ARGUMENTS

=head1 OPTIONS

=head1 DESCRIPTION

=head1 DIAGNOSTICS

error messages

=head1 CONFIGURATION

Configuration files used?

=head1 DEPENDENCIES

=head1 INCOMPATIBILITIES

none known

=head1 BUGS AND LIMITATIONS

Report any found to <hostmaster@ox.ac.uk>

=head1 AUTHOR

Guy Edwards, maintained by <hostmaster@ox.ac.uk>

=head1 LICENSE AND COPYRIGHT

(c) University of Oxford
